[{"F:\\proshop_django-master\\frontend\\src\\index.js":"1","F:\\proshop_django-master\\frontend\\src\\reportWebVitals.js":"2","F:\\proshop_django-master\\frontend\\src\\App.js":"3","F:\\proshop_django-master\\frontend\\src\\store.js":"4","F:\\proshop_django-master\\frontend\\src\\components\\Footer.js":"5","F:\\proshop_django-master\\frontend\\src\\screens\\CartScreen.js":"6","F:\\proshop_django-master\\frontend\\src\\screens\\LoginScreen.js":"7","F:\\proshop_django-master\\frontend\\src\\components\\Header.js":"8","F:\\proshop_django-master\\frontend\\src\\screens\\HomeScreen.js":"9","F:\\proshop_django-master\\frontend\\src\\screens\\ProductListScreen.js":"10","F:\\proshop_django-master\\frontend\\src\\screens\\ShippingScreen.js":"11","F:\\proshop_django-master\\frontend\\src\\screens\\ProductScreen.js":"12","F:\\proshop_django-master\\frontend\\src\\screens\\ProfileScreen.js":"13","F:\\proshop_django-master\\frontend\\src\\screens\\RegisterScreen.js":"14","F:\\proshop_django-master\\frontend\\src\\screens\\ProductEditScreen.js":"15","F:\\proshop_django-master\\frontend\\src\\screens\\PlaceOrderScreen.js":"16","F:\\proshop_django-master\\frontend\\src\\screens\\PaymentScreen.js":"17","F:\\proshop_django-master\\frontend\\src\\screens\\OrderScreen.js":"18","F:\\proshop_django-master\\frontend\\src\\screens\\OrderListScreen.js":"19","F:\\proshop_django-master\\frontend\\src\\screens\\UserEditScreen.js":"20","F:\\proshop_django-master\\frontend\\src\\screens\\UserListScreen.js":"21","F:\\proshop_django-master\\frontend\\src\\reducers\\userReducers.js":"22","F:\\proshop_django-master\\frontend\\src\\reducers\\orderReducers.js":"23","F:\\proshop_django-master\\frontend\\src\\reducers\\cartReducers.js":"24","F:\\proshop_django-master\\frontend\\src\\reducers\\productReducers.js":"25","F:\\proshop_django-master\\frontend\\src\\components\\Message.js":"26","F:\\proshop_django-master\\frontend\\src\\components\\Loader.js":"27","F:\\proshop_django-master\\frontend\\src\\components\\FormContainer.js":"28","F:\\proshop_django-master\\frontend\\src\\components\\Paginate.js":"29","F:\\proshop_django-master\\frontend\\src\\components\\SearchBox.js":"30","F:\\proshop_django-master\\frontend\\src\\components\\Product.js":"31","F:\\proshop_django-master\\frontend\\src\\components\\ProductCarousel.js":"32","F:\\proshop_django-master\\frontend\\src\\components\\CheckoutSteps.js":"33","F:\\proshop_django-master\\frontend\\src\\actions\\cartActions.js":"34","F:\\proshop_django-master\\frontend\\src\\actions\\productActions.js":"35","F:\\proshop_django-master\\frontend\\src\\actions\\orderActions.js":"36","F:\\proshop_django-master\\frontend\\src\\constants\\cartConstants.js":"37","F:\\proshop_django-master\\frontend\\src\\actions\\userActions.js":"38","F:\\proshop_django-master\\frontend\\src\\constants\\orderConstants.js":"39","F:\\proshop_django-master\\frontend\\src\\constants\\productConstants.js":"40","F:\\proshop_django-master\\frontend\\src\\constants\\userConstants.js":"41","F:\\proshop_django-master\\frontend\\src\\components\\Rating.js":"42","F:\\final year project ecom\\frontend\\src\\index.js":"43","F:\\final year project ecom\\frontend\\src\\reportWebVitals.js":"44","F:\\final year project ecom\\frontend\\src\\App.js":"45","F:\\final year project ecom\\frontend\\src\\store.js":"46","F:\\final year project ecom\\frontend\\src\\screens\\LoginScreen.js":"47","F:\\final year project ecom\\frontend\\src\\screens\\HomeScreen.js":"48","F:\\final year project ecom\\frontend\\src\\screens\\CartScreen.js":"49","F:\\final year project ecom\\frontend\\src\\screens\\ProfileScreen.js":"50","F:\\final year project ecom\\frontend\\src\\screens\\ProductScreen.js":"51","F:\\final year project ecom\\frontend\\src\\screens\\OrderScreen.js":"52","F:\\final year project ecom\\frontend\\src\\screens\\ShippingScreen.js":"53","F:\\final year project ecom\\frontend\\src\\screens\\PaymentScreen.js":"54","F:\\final year project ecom\\frontend\\src\\screens\\ProductListScreen.js":"55","F:\\final year project ecom\\frontend\\src\\screens\\ProductEditScreen.js":"56","F:\\final year project ecom\\frontend\\src\\components\\Footer.js":"57","F:\\final year project ecom\\frontend\\src\\screens\\OrderListScreen.js":"58","F:\\final year project ecom\\frontend\\src\\screens\\RegisterScreen.js":"59","F:\\final year project ecom\\frontend\\src\\screens\\PlaceOrderScreen.js":"60","F:\\final year project ecom\\frontend\\src\\reducers\\productReducers.js":"61","F:\\final year project ecom\\frontend\\src\\components\\Header.js":"62","F:\\final year project ecom\\frontend\\src\\reducers\\cartReducers.js":"63","F:\\final year project ecom\\frontend\\src\\reducers\\orderReducers.js":"64","F:\\final year project ecom\\frontend\\src\\screens\\UserEditScreen.js":"65","F:\\final year project ecom\\frontend\\src\\screens\\UserListScreen.js":"66","F:\\final year project ecom\\frontend\\src\\reducers\\userReducers.js":"67","F:\\final year project ecom\\frontend\\src\\components\\Loader.js":"68","F:\\final year project ecom\\frontend\\src\\components\\Message.js":"69","F:\\final year project ecom\\frontend\\src\\components\\FormContainer.js":"70","F:\\final year project ecom\\frontend\\src\\components\\Paginate.js":"71","F:\\final year project ecom\\frontend\\src\\components\\Product.js":"72","F:\\final year project ecom\\frontend\\src\\components\\ProductCarousel.js":"73","F:\\final year project ecom\\frontend\\src\\components\\Rating.js":"74","F:\\final year project ecom\\frontend\\src\\components\\CheckoutSteps.js":"75","F:\\final year project ecom\\frontend\\src\\actions\\cartActions.js":"76","F:\\final year project ecom\\frontend\\src\\actions\\productActions.js":"77","F:\\final year project ecom\\frontend\\src\\actions\\orderActions.js":"78","F:\\final year project ecom\\frontend\\src\\actions\\userActions.js":"79","F:\\final year project ecom\\frontend\\src\\constants\\orderConstants.js":"80","F:\\final year project ecom\\frontend\\src\\constants\\productConstants.js":"81","F:\\final year project ecom\\frontend\\src\\constants\\userConstants.js":"82","F:\\final year project ecom\\frontend\\src\\constants\\cartConstants.js":"83","F:\\final year project ecom\\frontend\\src\\components\\SearchBox.js":"84","F:\\final year project ecom\\frontend\\src\\screens\\PricePredict.js":"85","F:\\final year project ecom\\frontend\\src\\components\\ProductOffer.js":"86","F:\\final year project ecom\\frontend\\src\\components\\Navs.js":"87","F:\\final year project ecom\\frontend\\src\\screens\\ContactScreen.js":"88","F:\\final year project ecom\\frontend\\src\\reducers\\contactReducer.js":"89","F:\\final year project ecom\\frontend\\src\\constants\\contactConstants.js":"90","F:\\final year project ecom\\frontend\\src\\screens\\TopReviewProductScreen.js":"91","F:\\final year project ecom\\frontend\\src\\components\\CompareProduct.js":"92","F:\\final year project ecom\\frontend\\src\\screens\\CompareScreen.js":"93","F:\\final year project ecom\\frontend\\src\\screens\\PriceRangeScreen.js":"94","F:\\final year project ecom\\frontend\\src\\screens\\DeshboardScreen.js":"95","F:\\final year project ecom\\frontend\\src\\admin_components\\UserList.js":"96","F:\\final year project ecom\\frontend\\src\\admin_components\\OrderList.js":"97"},{"size":594,"mtime":1616789579000,"results":"98","hashOfConfig":"99"},{"size":362,"mtime":1616789579000,"results":"100","hashOfConfig":"99"},{"size":2189,"mtime":1616789579000,"results":"101","hashOfConfig":"99"},{"size":2417,"mtime":1616789579000,"results":"102","hashOfConfig":"99"},{"size":359,"mtime":1616789579000,"results":"103","hashOfConfig":"99"},{"size":4721,"mtime":1616789579000,"results":"104","hashOfConfig":"99"},{"size":2549,"mtime":1616789579000,"results":"105","hashOfConfig":"99"},{"size":3014,"mtime":1633257558107,"results":"106","hashOfConfig":"99"},{"size":1553,"mtime":1616789579000,"results":"107","hashOfConfig":"99"},{"size":5007,"mtime":1616789579000,"results":"108","hashOfConfig":"99"},{"size":3176,"mtime":1616789579000,"results":"109","hashOfConfig":"99"},{"size":11494,"mtime":1616789579000,"results":"110","hashOfConfig":"99"},{"size":6774,"mtime":1616789579000,"results":"111","hashOfConfig":"99"},{"size":3922,"mtime":1616789579000,"results":"112","hashOfConfig":"99"},{"size":7916,"mtime":1616789579000,"results":"113","hashOfConfig":"99"},{"size":6564,"mtime":1616789579000,"results":"114","hashOfConfig":"99"},{"size":1705,"mtime":1616789579000,"results":"115","hashOfConfig":"99"},{"size":9903,"mtime":1616789579000,"results":"116","hashOfConfig":"99"},{"size":3541,"mtime":1616789579000,"results":"117","hashOfConfig":"99"},{"size":3912,"mtime":1616789579000,"results":"118","hashOfConfig":"99"},{"size":3511,"mtime":1616789579000,"results":"119","hashOfConfig":"99"},{"size":3926,"mtime":1616789579000,"results":"120","hashOfConfig":"99"},{"size":4079,"mtime":1616789579000,"results":"121","hashOfConfig":"99"},{"size":1486,"mtime":1616789579000,"results":"122","hashOfConfig":"99"},{"size":4080,"mtime":1616789579000,"results":"123","hashOfConfig":"99"},{"size":228,"mtime":1616789579000,"results":"124","hashOfConfig":"99"},{"size":458,"mtime":1616789579000,"results":"125","hashOfConfig":"99"},{"size":378,"mtime":1616789579000,"results":"126","hashOfConfig":"99"},{"size":859,"mtime":1616789579000,"results":"127","hashOfConfig":"99"},{"size":986,"mtime":1633262384658,"results":"128","hashOfConfig":"99"},{"size":1008,"mtime":1616789579000,"results":"129","hashOfConfig":"99"},{"size":1419,"mtime":1616789579000,"results":"130","hashOfConfig":"99"},{"size":1593,"mtime":1616789579000,"results":"131","hashOfConfig":"99"},{"size":1310,"mtime":1616789579000,"results":"132","hashOfConfig":"99"},{"size":5931,"mtime":1616789579000,"results":"133","hashOfConfig":"99"},{"size":6009,"mtime":1616789579000,"results":"134","hashOfConfig":"99"},{"size":287,"mtime":1616789579000,"results":"135","hashOfConfig":"99"},{"size":7370,"mtime":1616789579000,"results":"136","hashOfConfig":"99"},{"size":1240,"mtime":1616789579000,"results":"137","hashOfConfig":"99"},{"size":1502,"mtime":1616789579000,"results":"138","hashOfConfig":"99"},{"size":1479,"mtime":1616789579000,"results":"139","hashOfConfig":"99"},{"size":1886,"mtime":1616789579000,"results":"140","hashOfConfig":"99"},{"size":594,"mtime":1616789579000,"results":"141","hashOfConfig":"142"},{"size":362,"mtime":1616789579000,"results":"143","hashOfConfig":"142"},{"size":2939,"mtime":1637520030289,"results":"144","hashOfConfig":"142"},{"size":2608,"mtime":1634616145540,"results":"145","hashOfConfig":"142"},{"size":2549,"mtime":1616789579000,"results":"146","hashOfConfig":"142"},{"size":1960,"mtime":1634986135384,"results":"147","hashOfConfig":"142"},{"size":4749,"mtime":1635444913859,"results":"148","hashOfConfig":"142"},{"size":6774,"mtime":1616789579000,"results":"149","hashOfConfig":"142"},{"size":12044,"mtime":1637421646910,"results":"150","hashOfConfig":"142"},{"size":9940,"mtime":1634269448027,"results":"151","hashOfConfig":"142"},{"size":3176,"mtime":1616789579000,"results":"152","hashOfConfig":"142"},{"size":1705,"mtime":1633273024488,"results":"153","hashOfConfig":"142"},{"size":5046,"mtime":1637509130610,"results":"154","hashOfConfig":"142"},{"size":9683,"mtime":1637434469402,"results":"155","hashOfConfig":"142"},{"size":2011,"mtime":1637518445166,"results":"156","hashOfConfig":"142"},{"size":3541,"mtime":1616789579000,"results":"157","hashOfConfig":"142"},{"size":3922,"mtime":1616789579000,"results":"158","hashOfConfig":"142"},{"size":6564,"mtime":1635445566904,"results":"159","hashOfConfig":"142"},{"size":4603,"mtime":1634398141390,"results":"160","hashOfConfig":"142"},{"size":3672,"mtime":1637508845031,"results":"161","hashOfConfig":"142"},{"size":1486,"mtime":1616789579000,"results":"162","hashOfConfig":"142"},{"size":4079,"mtime":1616789579000,"results":"163","hashOfConfig":"142"},{"size":3912,"mtime":1634390265996,"results":"164","hashOfConfig":"142"},{"size":3512,"mtime":1637513410410,"results":"165","hashOfConfig":"142"},{"size":3926,"mtime":1616789579000,"results":"166","hashOfConfig":"142"},{"size":413,"mtime":1637418940752,"results":"167","hashOfConfig":"142"},{"size":228,"mtime":1616789579000,"results":"168","hashOfConfig":"142"},{"size":378,"mtime":1616789579000,"results":"169","hashOfConfig":"142"},{"size":859,"mtime":1616789579000,"results":"170","hashOfConfig":"142"},{"size":1497,"mtime":1637432734309,"results":"171","hashOfConfig":"142"},{"size":1436,"mtime":1634985895621,"results":"172","hashOfConfig":"142"},{"size":1886,"mtime":1616789579000,"results":"173","hashOfConfig":"142"},{"size":1593,"mtime":1616789579000,"results":"174","hashOfConfig":"142"},{"size":1357,"mtime":1635445097377,"results":"175","hashOfConfig":"142"},{"size":6539,"mtime":1634392916033,"results":"176","hashOfConfig":"142"},{"size":6009,"mtime":1616789579000,"results":"177","hashOfConfig":"142"},{"size":7370,"mtime":1616789579000,"results":"178","hashOfConfig":"142"},{"size":1240,"mtime":1616789579000,"results":"179","hashOfConfig":"142"},{"size":1682,"mtime":1634392810247,"results":"180","hashOfConfig":"142"},{"size":1479,"mtime":1616789579000,"results":"181","hashOfConfig":"142"},{"size":287,"mtime":1616789579000,"results":"182","hashOfConfig":"142"},{"size":999,"mtime":1633273191940,"results":"183","hashOfConfig":"142"},{"size":19663,"mtime":1637523218831,"results":"184","hashOfConfig":"142"},{"size":1677,"mtime":1634893034500,"results":"185","hashOfConfig":"142"},{"size":1506,"mtime":1635517109726,"results":"186","hashOfConfig":"142"},{"size":5476,"mtime":1634617805392,"results":"187","hashOfConfig":"142"},{"size":662,"mtime":1634616062678,"results":"188","hashOfConfig":"142"},{"size":370,"mtime":1634615717528,"results":"189","hashOfConfig":"142"},{"size":1755,"mtime":1634648271269,"results":"190","hashOfConfig":"142"},{"size":3073,"mtime":1634985347629,"results":"191","hashOfConfig":"142"},{"size":3123,"mtime":1637424263313,"results":"192","hashOfConfig":"142"},{"size":2020,"mtime":1637434997079,"results":"193","hashOfConfig":"142"},{"size":9862,"mtime":1637520686098,"results":"194","hashOfConfig":"142"},{"size":3317,"mtime":1637515806953,"results":"195","hashOfConfig":"142"},{"size":3575,"mtime":1637516070998,"results":"196","hashOfConfig":"142"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},"1gd5eey",{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"199"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"199"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"199"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"199"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"199"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"199"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"199"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"199"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"199"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"199"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"199"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"199"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"199"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"199"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"199"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"199"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},"1xh63bk",{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"300"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"300"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"300"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"300"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"300"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"300"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"300"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"300"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"300"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"300"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"300"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"300"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"300"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"300"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"300"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"300"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"300"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"300"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"300"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"300"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"300"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"300"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"300"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"300"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"300"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"300"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"300"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"300"},"F:\\proshop_django-master\\frontend\\src\\index.js",[],["428","429"],"F:\\proshop_django-master\\frontend\\src\\reportWebVitals.js",[],"F:\\proshop_django-master\\frontend\\src\\App.js",[],"F:\\proshop_django-master\\frontend\\src\\store.js",[],"F:\\proshop_django-master\\frontend\\src\\components\\Footer.js",[],"F:\\proshop_django-master\\frontend\\src\\screens\\CartScreen.js",[],"F:\\proshop_django-master\\frontend\\src\\screens\\LoginScreen.js",[],"F:\\proshop_django-master\\frontend\\src\\components\\Header.js",["430"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Ayan&Nakib Store</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n                        <Nav className=\"ml-auto\">\n\n                            <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","F:\\proshop_django-master\\frontend\\src\\screens\\HomeScreen.js",["431"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            {!keyword && <ProductCarousel />}\n\n            <h1>Latest Products</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen\n","F:\\proshop_django-master\\frontend\\src\\screens\\ProductListScreen.js",["432"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","F:\\proshop_django-master\\frontend\\src\\screens\\ShippingScreen.js",["433"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","F:\\proshop_django-master\\frontend\\src\\screens\\ProductScreen.js",["434"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Price: ${product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","F:\\proshop_django-master\\frontend\\src\\screens\\ProfileScreen.js",["435","436"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","F:\\proshop_django-master\\frontend\\src\\screens\\RegisterScreen.js",["437"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","F:\\proshop_django-master\\frontend\\src\\screens\\ProductEditScreen.js",[],"F:\\proshop_django-master\\frontend\\src\\screens\\PlaceOrderScreen.js",["438","439"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","F:\\proshop_django-master\\frontend\\src\\screens\\PaymentScreen.js",["440"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","F:\\proshop_django-master\\frontend\\src\\screens\\OrderScreen.js",["441"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","F:\\proshop_django-master\\frontend\\src\\screens\\OrderListScreen.js",["442"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","F:\\proshop_django-master\\frontend\\src\\screens\\UserEditScreen.js",["443"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","F:\\proshop_django-master\\frontend\\src\\screens\\UserListScreen.js",["444"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","F:\\proshop_django-master\\frontend\\src\\reducers\\userReducers.js",[],"F:\\proshop_django-master\\frontend\\src\\reducers\\orderReducers.js",[],"F:\\proshop_django-master\\frontend\\src\\reducers\\cartReducers.js",[],"F:\\proshop_django-master\\frontend\\src\\reducers\\productReducers.js",[],"F:\\proshop_django-master\\frontend\\src\\components\\Message.js",[],"F:\\proshop_django-master\\frontend\\src\\components\\Loader.js",[],"F:\\proshop_django-master\\frontend\\src\\components\\FormContainer.js",[],"F:\\proshop_django-master\\frontend\\src\\components\\Paginate.js",[],"F:\\proshop_django-master\\frontend\\src\\components\\SearchBox.js",[],"F:\\proshop_django-master\\frontend\\src\\components\\Product.js",[],"F:\\proshop_django-master\\frontend\\src\\components\\ProductCarousel.js",[],"F:\\proshop_django-master\\frontend\\src\\components\\CheckoutSteps.js",[],"F:\\proshop_django-master\\frontend\\src\\actions\\cartActions.js",[],"F:\\proshop_django-master\\frontend\\src\\actions\\productActions.js",["445"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","F:\\proshop_django-master\\frontend\\src\\actions\\orderActions.js",["446","447","448"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","F:\\proshop_django-master\\frontend\\src\\constants\\cartConstants.js",[],"F:\\proshop_django-master\\frontend\\src\\actions\\userActions.js",["449"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","F:\\proshop_django-master\\frontend\\src\\constants\\orderConstants.js",[],"F:\\proshop_django-master\\frontend\\src\\constants\\productConstants.js",[],"F:\\proshop_django-master\\frontend\\src\\constants\\userConstants.js",[],"F:\\proshop_django-master\\frontend\\src\\components\\Rating.js",[],"F:\\final year project ecom\\frontend\\src\\index.js",[],["450","451"],"F:\\final year project ecom\\frontend\\src\\reportWebVitals.js",[],"F:\\final year project ecom\\frontend\\src\\App.js",[],"F:\\final year project ecom\\frontend\\src\\store.js",[],"F:\\final year project ecom\\frontend\\src\\screens\\LoginScreen.js",[],"F:\\final year project ecom\\frontend\\src\\screens\\HomeScreen.js",["452","453"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts } from '../actions/productActions'\nimport ProductOffer from '../components/ProductOffer'\nimport Navs from '../components/Navs'\nimport CompareProduct from '../components/CompareProduct'\nimport ProductCarousel from '../components/ProductCarousel'\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n           \n            <Row>\n                <Col md={9}>\n                    <ProductOffer/>\n                </Col>\n                <Col md={3}>\n                    <CompareProduct/>\n\n                </Col>\n                </Row>\n            <br></br>\n\n            <Navs/>\n\n            <h4 className=\"mt-5\">Latest Laptops</h4>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n           \n        </div>\n    )\n}\n\nexport default HomeScreen\n","F:\\final year project ecom\\frontend\\src\\screens\\CartScreen.js",[],"F:\\final year project ecom\\frontend\\src\\screens\\ProfileScreen.js",["454","455"],"F:\\final year project ecom\\frontend\\src\\screens\\ProductScreen.js",["456","457","458","459"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <span className=\"h3\">&#2547;{product.is_offer ? product.price - ((product.price * product.offer_percentage) / 100) : product.price}</span>\n                                            <br></br><span class=\"text-tl\">{product.is_offer ? '৳' + product.price : null}</span> <b>{product.is_offer ? '-' + product.offer_percentage + '%' : <br></br>}</b>\n                                        </ListGroup.Item>\n                                    \n\n                                        <ListGroup.Item>\n                                            Description: {ReactHtmlParser(product.description)}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                \n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        \n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","F:\\final year project ecom\\frontend\\src\\screens\\OrderScreen.js",["460"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                   \n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","F:\\final year project ecom\\frontend\\src\\screens\\ShippingScreen.js",["461"],"F:\\final year project ecom\\frontend\\src\\screens\\PaymentScreen.js",["462"],"F:\\final year project ecom\\frontend\\src\\screens\\ProductListScreen.js",["463"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    console.log(\"keyword : \", keyword);\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>{product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","F:\\final year project ecom\\frontend\\src\\screens\\ProductEditScreen.js",["464","465","466","467"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const[is_offer, setIsOffer] = useState('')\n    const[offer_percentage, setOfferPercentage] = useState(0)\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n                setIsOffer(product.is_offer)\n                setOfferPercentage(product.offer_percentage)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(is_offer == 'True' && offer_percentage >= 0)\n        {\n            alert(\"something went wrong\");\n            return;\n        }\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description,\n            is_offer,\n            offer_percentage,\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        \n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose File'\n                                    custom\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n\n\n                            <Form.Group controlId='brand'>\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter brand'\n                                    value={brand}\n                                    onChange={(e) => setBrand(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='countinstock'>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter stock'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='category'>\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter category'\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description</Form.Label>\n                                \n                                <CKEditor editor={ClassicEditor} \n                                    onChange={(e, editor) => setDescription(editor.getData())}\n                                />\n                                <div>\n                                    {ReactHtmlParser(description)}\n                                </div>\n                            </Form.Group>\n\n                            <Form.Group controlId='is_offer'>\n                                <Form.Label>Is Offer (You must give True or False)</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter '\n                                    value={is_offer}\n                                    onChange={(e) => setIsOffer(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n    \n\n                            <Form.Group controlId='offerPercentage'>\n                                <Form.Label>Offer Percentage</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter '\n                                    value={offer_percentage}\n                                    onChange={(e) => setOfferPercentage(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen","F:\\final year project ecom\\frontend\\src\\components\\Footer.js",[],"F:\\final year project ecom\\frontend\\src\\screens\\OrderListScreen.js",["468"],"F:\\final year project ecom\\frontend\\src\\screens\\RegisterScreen.js",["469"],"F:\\final year project ecom\\frontend\\src\\screens\\PlaceOrderScreen.js",["470","471"],"F:\\final year project ecom\\frontend\\src\\reducers\\productReducers.js",[],"F:\\final year project ecom\\frontend\\src\\components\\Header.js",["472"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\nimport './style.css';\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    return (\n        <header>\n            <Navbar className=\"navbar-dark bg-dark pt-1 pb-1\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand><span class=\"text-info h2\"><b>L</b></span><span className=\"text-danger\">a</span>\n                        <span className=\"text-success\">p</span>\n                        <span className=\"text-warning\">t</span>op Store</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n                        <Nav className=\"ml-auto\">\n                            <LinkContainer to='/cart'>\n                                <Nav.Link><i className=\"fas fa-shopping-cart ct\"></i> <span class=\"badge badge-warning ct3\">{cartItems.length > 0 ? cartItems.length : null}</span></Nav.Link>\n                            </LinkContainer>\n                           \n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Deshboard' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to='/admin/deshboard'>\n                                        <NavDropdown.Item>deshboard</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","F:\\final year project ecom\\frontend\\src\\reducers\\cartReducers.js",[],"F:\\final year project ecom\\frontend\\src\\reducers\\orderReducers.js",[],"F:\\final year project ecom\\frontend\\src\\screens\\UserEditScreen.js",["473"],"F:\\final year project ecom\\frontend\\src\\screens\\UserListScreen.js",["474"],"import {React as useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","F:\\final year project ecom\\frontend\\src\\reducers\\userReducers.js",[],"F:\\final year project ecom\\frontend\\src\\components\\Loader.js",[],"F:\\final year project ecom\\frontend\\src\\components\\Message.js",[],"F:\\final year project ecom\\frontend\\src\\components\\FormContainer.js",[],"F:\\final year project ecom\\frontend\\src\\components\\Paginate.js",[],"F:\\final year project ecom\\frontend\\src\\components\\Product.js",[],"F:\\final year project ecom\\frontend\\src\\components\\ProductCarousel.js",[],"F:\\final year project ecom\\frontend\\src\\components\\Rating.js",[],"F:\\final year project ecom\\frontend\\src\\components\\CheckoutSteps.js",[],"F:\\final year project ecom\\frontend\\src\\actions\\cartActions.js",[],"F:\\final year project ecom\\frontend\\src\\actions\\productActions.js",["475"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n    PRODUCT_OFFER_REQUEST,\n    PRODUCT_OFFER_SUCCESS,\n    PRODUCT_OFFER_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listOfferProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_OFFER_REQUEST })\n\n        const { data } = await axios.get(`/api/products/offer/`)\n\n        dispatch({\n            type: PRODUCT_OFFER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_OFFER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","F:\\final year project ecom\\frontend\\src\\actions\\orderActions.js",["476","477","478"],"F:\\final year project ecom\\frontend\\src\\actions\\userActions.js",["479"],"F:\\final year project ecom\\frontend\\src\\constants\\orderConstants.js",[],"F:\\final year project ecom\\frontend\\src\\constants\\productConstants.js",[],"F:\\final year project ecom\\frontend\\src\\constants\\userConstants.js",[],"F:\\final year project ecom\\frontend\\src\\constants\\cartConstants.js",[],"F:\\final year project ecom\\frontend\\src\\components\\SearchBox.js",[],"F:\\final year project ecom\\frontend\\src\\screens\\PricePredict.js",["480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499"],"F:\\final year project ecom\\frontend\\src\\components\\ProductOffer.js",["500"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image, Card } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listOfferProducts } from '../actions/productActions'\r\n\r\nfunction ProductOffer() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productOfferRated = useSelector(state => state.productOfferRated)\r\n    const { error, loading, products } = productOfferRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listOfferProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (  \r\n               \r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        \r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid/>\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} real price (${product.price}) <br></br>offering price  ({product.offer_percentage}%) (${(product.price - (product.price * product.offer_percentage) / 100)}) </h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                       \r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductOffer\r\n","F:\\final year project ecom\\frontend\\src\\components\\Navs.js",["501","502","503","504"],"import React from 'react'\r\nimport {Nav, Link} from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Navs() {\r\n     \r\n    const history = useHistory();\r\n\r\n    const handleSelect = (eventKey) => {\r\n        if(eventKey == \"pricePredict\")\r\n        {\r\n            history.push(\"/pricePredict\");\r\n        }\r\n        if (eventKey == \"priceRange\")\r\n        {\r\n            history.push(\"/priceRange\");\r\n        }\r\n        if (eventKey == \"contact\") {\r\n            history.push(\"/contact\");\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <div>\r\n\r\n\r\n            <Nav className=\"justify-content-center\" activeKey=\"/home\" >\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"priceRange\" onSelect={handleSelect} style={{ fontSize: \"20px\" }}><i class=\"fas fa-star\"></i> PRICE RANGE</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"pricePredict\" onSelect={handleSelect} style={{ fontSize: \"20px\" }}><i class=\"fas fa-laptop-medical text-dark\"></i> PREDICT LAPTOP PRICE</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"contact\" onSelect={handleSelect} style={{ fontSize: \"20px\" }}><b><i class=\"fas fa-id-card-alt\"></i> CONTACT</b></Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n            <p className=\"text-center mt-4 mb-4\">A laptop Store</p>\r\n            <hr></hr>\r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Navs\r\n","F:\\final year project ecom\\frontend\\src\\screens\\ContactScreen.js",["505","506","507","508"],"import { React, useState} from 'react';\r\nimport {Row, Col} from 'react-bootstrap'\r\n\r\nfunction Contact()\r\n{\r\n    const [contact, setContact] = useState(\r\n        {\r\n            f_name: \"\",\r\n            l_name: \"\",\r\n            a_code: \"\",\r\n            tel_p: \"\",\r\n            email: \"\",\r\n            need_contact: \"\",\r\n            c_type: \"\",\r\n            message: \"\",\r\n\r\n        }\r\n    )\r\n    \r\n\r\n    return(\r\n        <div>\r\n                <h1>Contact</h1>\r\n           <Row>\r\n                <Col md={6} className=\"bg-dark p-4 text-white\">\r\n                    <h5 className=\"text-white\">Our Address</h5>\r\n                    <address>\r\n                        121, Zindabazar<br></br>\r\n                        Sylhet, Sylhet<br></br>\r\n                        Bangladesh<br></br>\r\n                        <i class=\"fa fa-phone\"></i>: +852 1234 5678<br></br>\r\n                        <i class=\"fa fa-fax\"></i>: +852 8765 4321<br></br>\r\n                        <i class=\"fa fa-envelope\"></i>:\r\n                        <a href=\"mailto:aaziz9642@gmail.com\" className=\"text-white\">aaziz9642@gmail.com</a>\r\n                    </address>\r\n                    <div class=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" class=\"btn btn-warning\" href=\"tel:+85212345678\"><i class=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" class=\"btn btn-info\"><i class=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" class=\"btn btn-success\" href=\"mailto:aaziz9642@gmail.com\"><i class=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </Col>\r\n                <Col md={5} className=\"bg-dark p-4 ml-5\">\r\n                    <h4 className=\"text-white\"> Location Information</h4>\r\n                </Col>\r\n               \r\n           </Row>\r\n           <hr></hr>\r\n           <Row>\r\n        \r\n                    <Col md={8} className=\"bg-dark p-4 mt-5\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"exampleInputEmail1\" className=\"text-white\">First Name</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter name\" name=\"f_name\" />\r\n                        </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" className=\"text-white\">Last Name</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter name\"  name=\"l_name\"/>\r\n                    </div>\r\n\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\" className=\"text-white\">Area Code</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter area code\" name=\"a_code\"/>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\" className=\"text-white\">Telphone</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter telphone no\" name=\"tel_p\"/>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"exampleInputEmail1\" className=\"text-white\">Email</label>\r\n                            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" name=\"email\"/>\r\n                            <small id=\"emailHelp\" class=\"form-text text-muted text-white\">We'll never share your email with anyone else.</small>\r\n                        </div>\r\n\r\n\r\n                        <Row>\r\n\r\n                        <Col md={10}>\r\n                            <div class=\"form-check\">\r\n                                <input type=\"checkbox\" class=\"form-check-input\" name=\"approve\" id=\"approve\" value=\"\" name=\"need_contact\"/>\r\n                                <label class=\"form-check-label\" for=\"approve\">\r\n                                    <strong>May we contact you?</strong>\r\n                                </label>\r\n\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={2} >\r\n\r\n                            <select class=\"form-control\">\r\n                                <option value=\"tel\">Tel.</option>\r\n                                <option value=\"email\">Email</option>\r\n                            </select>\r\n                        </Col>\r\n\r\n\r\n\r\n                        </Row>\r\n                   \r\n                        <div class=\"form-group\">\r\n                            <label for=\"exampleFormControlTextarea1\" className=\"text-white\">Message</label>\r\n                            <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                        </div>\r\n                   \r\n                  \r\n                       \r\n               </Col>\r\n\r\n           </Row>\r\n           <button className=\"btn btn-warning mt-4\">Submit</button>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","F:\\final year project ecom\\frontend\\src\\reducers\\contactReducer.js",["509","510","511"],"import {\r\n    CONTACT_LIST_REQUEST,\r\n    CONTACT_LIST_SUCCESS,\r\n    CONTACT_LIST_FAIL,\r\n\r\n    CONTACT_CREATE_REQUEST,\r\n    CONTACT_CREATE_SUCCESS,\r\n    CONTACT_CREATE_FAIL,\r\n\r\n\r\n} from '../constants/contactConstants';\r\n\r\n\r\nexport const contactCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CONTACT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case CONTACT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case CONTACT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","F:\\final year project ecom\\frontend\\src\\constants\\contactConstants.js",[],"F:\\final year project ecom\\frontend\\src\\screens\\TopReviewProductScreen.js",["512"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts } from '../actions/productActions'\r\nimport ProductOffer from '../components/ProductOffer'\r\nimport Navs from '../components/Navs'\r\n\r\n\r\nfunction TopReviewProductScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n\r\n            {!keyword && <ProductOffer />}\r\n            <br></br>\r\n\r\n            <Navs />\r\n\r\n            <h4 className=\"mt-5\">Latest Laptops</h4>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => product.numReviews > 0 ? (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ) : null )}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopReviewProductScreen;\r\n","F:\\final year project ecom\\frontend\\src\\components\\CompareProduct.js",["513","514","515","516","517","518"],"import axios from 'axios';\r\nimport { React, useState, initialState, useEffect, context}from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nconst baseURL = \"http://127.0.0.1:8000/api/products/all/\";\r\n\r\nconst CompareProduct = () =>{\r\n    const [productss, setProductss] = useState([])\r\n    const [isPC, setIsPC] = useState(false);\r\n    const [gt, setGt] = useState({\r\n        laptop_1: \"\",\r\n        laptop_2: \"\",\r\n\r\n    });\r\n    \r\n    useEffect( async () => {\r\n        try{\r\n            axios.get(baseURL).then((response) => {\r\n                setProductss(response.data)\r\n\r\n            });\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n    }, []);\r\n\r\n    const handleChange = (e) =>{\r\n        console.log(productss)\r\n        setGt({ ...gt, [e.target.name]: e.target.value })\r\n       \r\n    }\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        console.log(\"pro : \", productss)\r\n        \r\n        if(gt.laptop_1 == \"\" || gt.laptop_2 == \"\")\r\n        {\r\n            alert(\"You did not fill up both input field please try again\")\r\n        }\r\n        else if (gt.laptop_1 == gt.laptop_2) {\r\n            alert(\"Both Value Are Same. Please Try different value\");\r\n            //window.location.reload(false);\r\n        }\r\n        else{\r\n            setIsPC(true);\r\n            \r\n        }\r\n    }\r\n    if(isPC)\r\n    {\r\n        return(\r\n            <Redirect\r\n                to={{\r\n                    pathname: \"/compare\",\r\n                    state: { lep1: gt.laptop_1,\r\n                             lep2: gt.laptop_2,\r\n                           }\r\n                }}\r\n            />\r\n            )\r\n    }\r\n    else{\r\n\r\n    \r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"card p-2 bg-warning\">\r\n            <h5>Compare Products</h5>\r\n            <p>Choose Two Products to Compare</p>\r\n                <label for=\"exampleFormControlSelect1\">Leptop1</label>\r\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"laptop_1\" onChange={handleChange} >\r\n                    <option value=\"\">none</option>\r\n                    {\r\n                        productss.map((p) =>\r\n                            <option value={p._id}>{p.name}</option>\r\n                        )\r\n                    }\r\n                    \r\n                </select>\r\n               <br></br>\r\n            <label for=\"exampleFormControlSelect1\">Leptop2</label>\r\n            <select class=\"form-control\" id=\"exampleFormControlSelect1\" name=\"laptop_2\" onChange={handleChange} >\r\n                <option value=\"\">none</option>\r\n                    {\r\n                        productss.map((p) =>\r\n                            <option value={p._id}>{p.name}</option>\r\n                        )\r\n                    }\r\n\r\n                   \r\n            </select>\r\n            <br></br>\r\n                <br></br>\r\n            <button type=\"submit\" className=\"btn btn-dark\">Comparison</button>\r\n        </div>\r\n        </form>\r\n    );\r\n    }\r\n}\r\nexport default CompareProduct;","F:\\final year project ecom\\frontend\\src\\screens\\CompareScreen.js",["519","520","521","522","523","524","525","526"],"import React, {initialState, useState, useEffect} from 'react';\r\nimport Loader from '../components/Loader';\r\nimport axios from 'axios';\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\n\r\nconst baseURL = \"http://127.0.0.1:8000/api/products/all/\";\r\n\r\nfunction CompareScreen(props){\r\n    const [prod, setProd] = useState(initialState);\r\n    const[come, setCome] = useState(false);\r\n    const[loading, setLoading] = useState(false);\r\n\r\n    useEffect( async () => {\r\n        try {\r\n            setLoading(true);\r\n            axios.get(baseURL).then((response) => {\r\n                setProd(response.data)\r\n\r\n            });\r\n            setLoading(false);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, []);\r\n    return(\r\n        \r\n        <div>\r\n\r\n            {loading ? <Loader/>:\r\n            <div>\r\n            <h1 className=\"text-center\">Comparision between Two Laptops</h1>\r\n\r\n            {prod && (\r\n                <Row className=\"mt-2 mb-5\">\r\n                    <Col md={5}>\r\n                          <Card className=\"bg-dark text-white p-2\">\r\n                              \r\n                    {prod.map((pr, index) => pr._id == props.location.state.lep1 ? (\r\n                        <div key={index}>\r\n                            <Link to={`/product/${pr._id}`}>\r\n                                <Card.Img src={pr.image} className=\"img-fluid cc\"/>\r\n                            </Link>\r\n                           <Card.Body>\r\n                                <h5 className=\"text-white\">{pr.name}</h5>\r\n                                <p>{ReactHtmlParser(pr.description)}</p>\r\n                                <p>{pr.price}</p>\r\n                           </Card.Body>\r\n\r\n                        </div>\r\n                    ) : null )}\r\n                    </Card>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <h1 className=\"text-center mt-5\">VS</h1>\r\n                    </Col>\r\n\r\n                    <Col md={5}>\r\n                        <Card className=\"bg-dark text-white p-2\">\r\n                        {prod.map((pr, index) => pr._id == props.location.state.lep2 ? (\r\n                            <div key={index}>\r\n                                <Link to={`/product/${pr._id}`}>\r\n                                    <Card.Img src={pr.image} className=\"img-fluid cc\"/>\r\n                                </Link>\r\n                                <Card.Body>\r\n                                    <h5 className=\"text-white\">{pr.name}</h5>\r\n                                    <p>{ReactHtmlParser(pr.description)}</p>\r\n                                    <p>{pr.price}</p>\r\n                                </Card.Body>\r\n\r\n                            </div>\r\n                        ) : null)}\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n            )}\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default CompareScreen;","F:\\final year project ecom\\frontend\\src\\screens\\PriceRangeScreen.js",["527","528"],"import React, { initialState, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport Loader from '../components/Loader';\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\n\r\n\r\nconst baseURL = \"http://127.0.0.1:8000/api/products/all/\";\r\n\r\nconst PriceRangeScreen = () =>{\r\n    const [value, setValue] = useState(100000);\r\n    const [p, setP] = useState(initialState);\r\n    const [element, setElement] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const rangeSelector = (event, newValue) => {\r\n        setValue(newValue);\r\n        console.log(newValue)\r\n        setLoading(true);\r\n        setElement(10);\r\n        setLoading(false);\r\n        \r\n    };\r\n\r\n    useEffect(async () => {\r\n        try {\r\n    \r\n            axios.get(baseURL).then((response) => {\r\n                setP(response.data)\r\n\r\n            });\r\n           \r\n          \r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {loading ? <Loader/>:\r\n            <div>\r\n                <h4 classNmae=\"mt-2\">Search Price Range</h4>\r\n                <h1>\r\n        <RangeSlider\r\n           \r\n            max=\"300000\"\r\n            min=\"10000\"\r\n            tooltip=\"on\"\r\n            onChange={rangeSelector}\r\n            size=\"lg\"\r\n        >\r\n            </RangeSlider>\r\n            </h1>\r\n            \r\n        <h3>Price Range (10000 to {value}) TK</h3>\r\n                    <Row>\r\n                        {p && p.map(product => product.price <= value ? (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ) : null)}\r\n                    </Row>\r\n        \r\n        </div>\r\n            }\r\n\r\n\r\n       \r\n    \r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default PriceRangeScreen;","F:\\final year project ecom\\frontend\\src\\screens\\DeshboardScreen.js",["529","530","531","532","533","534"],"import { React as useState, useEffect } from 'react'\r\nimport {Row, Col, Tab, Nav, Card, Container} from 'react-bootstrap';\r\nimport UserList from '../admin_components/UserList';\r\nimport OrderList from '../admin_components/OrderList';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router';\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst DeshboardScreen = ({ history}) =>{\r\n\r\n    const percentage = 66;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n    \r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h3>Deshboard</h3>\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n                <Row>\r\n                    <Col sm={2}>\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"first\" size=\"lg\"><i class=\"fas fa-tachometer-alt\"></i>Dashboard</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"second\"><i class=\"fas fa-users\"></i>Users</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"third\"><i class=\"fab fa-product-hunt\"></i>Products</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"fourth\"><i class=\"fab fa-first-order\"></i>Orders</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"fifth\"><i class=\"fab fa-first-order\"></i>Contact</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"first\">\r\n                               \r\n                                <Container className=\"bg-primary\">\r\n                                    <Card className=\"bg-dark text-white\">\r\n                                        <Card.Header><h4 className=\"text-white\">Ecom</h4></Card.Header>\r\n                                        <Card.Body>\r\n                                            Where does it come from?\r\n                                            Contrary to popular belief, Lorem Ipsum is not simply random text. It has \r\n                                            roots in a piece of classical Latin literature from 45 BC, making it over 2000 \r\n                                            years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, \r\n                                            looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going \r\n                                            through the cites of the word in classical literature, discovered the undoubtable source. Lorem \r\n                                            Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes \r\n                                            of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics,\r\n                                             very popular during the Renaissance. \r\n                                            The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                    <Row className=\"mt-5\">\r\n                                       \r\n                                        <Col>\r\n                                            <Card className=\"bg-warning text-white\">\r\n                                                <Card.Header><h4 className=\"text-white\"><i class=\"fab fa-rev\"></i>Revenue : 20lkh</h4></Card.Header>\r\n                                                <Card.Body>This is some text within a card body.</Card.Body>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card className=\"bg-info text-white\">\r\n                                                <Card.Header><h4 className=\"text-white\"><i class=\"fas fa-store\"></i>Purchase : 10lkh</h4></Card.Header>\r\n                                                <Card.Body>This is some text within a card body.</Card.Body>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card className=\"bg-danger text-white\">\r\n                                                <Card.Header><h4 className=\"text-white\"><i class=\"fas fa-money-check-alt\"></i>Sales : 05lkh</h4></Card.Header>\r\n                                                <Card.Body>This is some text within a card body.</Card.Body>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={4}>\r\n                                            <Card className=\"mt-5 bg-dark p-4\">\r\n                                                <h4 className=\"text-white\">Transection History</h4>\r\n                                                <div style={{ width: 200, height: 200 }} >\r\n                                                    <CircularProgressbar maxValue={100} value={66} text={`${percentage}%`} />\r\n                                                </div>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card className=\"mt-5 bg-dark p-4 text-white mb-5\">\r\n                                                <Card.Header><h4 className=\"text-white\">To Do list</h4></Card.Header>\r\n                                                <Card.Body>\r\n                                                    <ol type=\"i\">\r\n                                                        <li>Todo list</li>\r\n                                                        <li>Blog App</li>\r\n                                                        <li>\r\n                                                            n publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document\r\n                                                        </li>\r\n                                                        <li>Ecom</li>\r\n                                                        <li>\r\n                                                            n publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document\r\n                                                        </li>\r\n                                                        <li>Todo list</li>\r\n                                                        <li>Blog App</li>\r\n                                                        <li>\r\n                                                            n publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            n publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document\r\n                                                        </li>\r\n                                                    </ol>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                            <div style={{marginBottom: '300px'}}></div>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n                                </Container>\r\n                                \r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"second\">\r\n                                <UserList />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"third\">\r\n                                This is 3\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"fourth\">\r\n                                <OrderList/>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"fifth\">\r\n                               This is contact\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default DeshboardScreen;\r\n","F:\\final year project ecom\\frontend\\src\\admin_components\\UserList.js",["535","536","537","538","539"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserList() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                            <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserList\r\n","F:\\final year project ecom\\frontend\\src\\admin_components\\OrderList.js",["540"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderList({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderList",{"ruleId":"541","replacedBy":"542"},{"ruleId":"543","replacedBy":"544"},{"ruleId":"545","severity":1,"message":"546","line":3,"column":34,"nodeType":"547","messageId":"548","endLine":3,"endColumn":37},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"545","severity":1,"message":"550","line":1,"column":27,"nodeType":"547","messageId":"548","endLine":1,"endColumn":36},{"ruleId":"551","severity":1,"message":"552","line":142,"column":84,"nodeType":"553","messageId":"554","endLine":142,"endColumn":86},{"ruleId":"545","severity":1,"message":"555","line":2,"column":10,"nodeType":"547","messageId":"548","endLine":2,"endColumn":14},{"ruleId":"551","severity":1,"message":"556","line":53,"column":22,"nodeType":"553","messageId":"554","endLine":53,"endColumn":24},{"ruleId":"551","severity":1,"message":"556","line":34,"column":22,"nodeType":"553","messageId":"554","endLine":34,"endColumn":24},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"557","severity":1,"message":"558","line":35,"column":8,"nodeType":"559","endLine":35,"endColumn":26,"suggestions":"560"},{"ruleId":"545","severity":1,"message":"550","line":1,"column":27,"nodeType":"547","messageId":"548","endLine":1,"endColumn":36},{"ruleId":"557","severity":1,"message":"561","line":65,"column":8,"nodeType":"559","endLine":65,"endColumn":62,"suggestions":"562"},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"557","severity":1,"message":"563","line":43,"column":8,"nodeType":"559","endLine":43,"endColumn":46,"suggestions":"564"},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"545","severity":1,"message":"565","line":117,"column":17,"nodeType":"547","messageId":"548","endLine":117,"endColumn":21},{"ruleId":"545","severity":1,"message":"566","line":14,"column":5,"nodeType":"547","messageId":"548","endLine":14,"endColumn":20},{"ruleId":"545","severity":1,"message":"567","line":19,"column":5,"nodeType":"547","messageId":"548","endLine":19,"endColumn":24},{"ruleId":"545","severity":1,"message":"568","line":28,"column":5,"nodeType":"547","messageId":"548","endLine":28,"endColumn":24},{"ruleId":"545","severity":1,"message":"569","line":21,"column":5,"nodeType":"547","messageId":"548","endLine":21,"endColumn":30},{"ruleId":"541","replacedBy":"570"},{"ruleId":"543","replacedBy":"571"},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"545","severity":1,"message":"572","line":12,"column":8,"nodeType":"547","messageId":"548","endLine":12,"endColumn":23},{"ruleId":"545","severity":1,"message":"555","line":2,"column":10,"nodeType":"547","messageId":"548","endLine":2,"endColumn":14},{"ruleId":"551","severity":1,"message":"556","line":53,"column":22,"nodeType":"553","messageId":"554","endLine":53,"endColumn":24},{"ruleId":"545","severity":1,"message":"573","line":10,"column":27,"nodeType":"547","messageId":"548","endLine":10,"endColumn":39},{"ruleId":"545","severity":1,"message":"574","line":10,"column":41,"nodeType":"547","messageId":"548","endLine":10,"endColumn":61},{"ruleId":"545","severity":1,"message":"575","line":10,"column":63,"nodeType":"547","messageId":"548","endLine":10,"endColumn":74},{"ruleId":"551","severity":1,"message":"552","line":147,"column":84,"nodeType":"553","messageId":"554","endLine":147,"endColumn":86},{"ruleId":"557","severity":1,"message":"561","line":65,"column":8,"nodeType":"559","endLine":65,"endColumn":62,"suggestions":"576"},{"ruleId":"545","severity":1,"message":"550","line":1,"column":27,"nodeType":"547","messageId":"548","endLine":1,"endColumn":36},{"ruleId":"545","severity":1,"message":"550","line":1,"column":27,"nodeType":"547","messageId":"548","endLine":1,"endColumn":36},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"545","severity":1,"message":"573","line":13,"column":27,"nodeType":"547","messageId":"548","endLine":13,"endColumn":39},{"ruleId":"545","severity":1,"message":"574","line":13,"column":41,"nodeType":"547","messageId":"548","endLine":13,"endColumn":61},{"ruleId":"545","severity":1,"message":"575","line":13,"column":63,"nodeType":"547","messageId":"548","endLine":13,"endColumn":74},{"ruleId":"551","severity":1,"message":"552","line":68,"column":21,"nodeType":"553","messageId":"554","endLine":68,"endColumn":23},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"551","severity":1,"message":"556","line":34,"column":22,"nodeType":"553","messageId":"554","endLine":34,"endColumn":24},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"557","severity":1,"message":"558","line":35,"column":8,"nodeType":"559","endLine":35,"endColumn":26,"suggestions":"577"},{"ruleId":"545","severity":1,"message":"546","line":3,"column":34,"nodeType":"547","messageId":"548","endLine":3,"endColumn":37},{"ruleId":"557","severity":1,"message":"563","line":43,"column":8,"nodeType":"559","endLine":43,"endColumn":46,"suggestions":"578"},{"ruleId":"545","severity":1,"message":"549","line":1,"column":18,"nodeType":"547","messageId":"548","endLine":1,"endColumn":26},{"ruleId":"545","severity":1,"message":"565","line":142,"column":17,"nodeType":"547","messageId":"548","endLine":142,"endColumn":21},{"ruleId":"545","severity":1,"message":"566","line":14,"column":5,"nodeType":"547","messageId":"548","endLine":14,"endColumn":20},{"ruleId":"545","severity":1,"message":"567","line":19,"column":5,"nodeType":"547","messageId":"548","endLine":19,"endColumn":24},{"ruleId":"545","severity":1,"message":"568","line":28,"column":5,"nodeType":"547","messageId":"548","endLine":28,"endColumn":24},{"ruleId":"545","severity":1,"message":"569","line":21,"column":5,"nodeType":"547","messageId":"548","endLine":21,"endColumn":30},{"ruleId":"545","severity":1,"message":"579","line":3,"column":10,"nodeType":"547","messageId":"548","endLine":3,"endColumn":23},{"ruleId":"545","severity":1,"message":"580","line":5,"column":10,"nodeType":"547","messageId":"548","endLine":5,"endColumn":18},{"ruleId":"545","severity":1,"message":"581","line":7,"column":20,"nodeType":"547","messageId":"548","endLine":7,"endColumn":29},{"ruleId":"545","severity":1,"message":"582","line":7,"column":31,"nodeType":"547","messageId":"548","endLine":7,"endColumn":36},{"ruleId":"545","severity":1,"message":"583","line":7,"column":38,"nodeType":"547","messageId":"548","endLine":7,"endColumn":42},{"ruleId":"545","severity":1,"message":"584","line":7,"column":44,"nodeType":"547","messageId":"548","endLine":7,"endColumn":50},{"ruleId":"545","severity":1,"message":"585","line":8,"column":8,"nodeType":"547","messageId":"548","endLine":8,"endColumn":15},{"ruleId":"551","severity":1,"message":"552","line":86,"column":28,"nodeType":"553","messageId":"554","endLine":86,"endColumn":30},{"ruleId":"551","severity":1,"message":"552","line":86,"column":55,"nodeType":"553","messageId":"554","endLine":86,"endColumn":57},{"ruleId":"551","severity":1,"message":"552","line":88,"column":30,"nodeType":"553","messageId":"554","endLine":88,"endColumn":32},{"ruleId":"551","severity":1,"message":"552","line":89,"column":40,"nodeType":"553","messageId":"554","endLine":89,"endColumn":42},{"ruleId":"551","severity":1,"message":"552","line":90,"column":27,"nodeType":"553","messageId":"554","endLine":90,"endColumn":29},{"ruleId":"551","severity":1,"message":"552","line":91,"column":27,"nodeType":"553","messageId":"554","endLine":91,"endColumn":29},{"ruleId":"551","severity":1,"message":"552","line":92,"column":30,"nodeType":"553","messageId":"554","endLine":92,"endColumn":32},{"ruleId":"551","severity":1,"message":"552","line":93,"column":27,"nodeType":"553","messageId":"554","endLine":93,"endColumn":29},{"ruleId":"551","severity":1,"message":"552","line":94,"column":28,"nodeType":"553","messageId":"554","endLine":94,"endColumn":30},{"ruleId":"551","severity":1,"message":"552","line":95,"column":30,"nodeType":"553","messageId":"554","endLine":95,"endColumn":32},{"ruleId":"551","severity":1,"message":"552","line":96,"column":35,"nodeType":"553","messageId":"554","endLine":96,"endColumn":37},{"ruleId":"551","severity":1,"message":"552","line":97,"column":27,"nodeType":"553","messageId":"554","endLine":97,"endColumn":29},{"ruleId":"551","severity":1,"message":"552","line":98,"column":27,"nodeType":"553","messageId":"554","endLine":98,"endColumn":29},{"ruleId":"545","severity":1,"message":"586","line":4,"column":27,"nodeType":"547","messageId":"548","endLine":4,"endColumn":31},{"ruleId":"545","severity":1,"message":"555","line":2,"column":14,"nodeType":"547","messageId":"548","endLine":2,"endColumn":18},{"ruleId":"551","severity":1,"message":"552","line":9,"column":21,"nodeType":"553","messageId":"554","endLine":9,"endColumn":23},{"ruleId":"551","severity":1,"message":"552","line":13,"column":22,"nodeType":"553","messageId":"554","endLine":13,"endColumn":24},{"ruleId":"551","severity":1,"message":"552","line":17,"column":22,"nodeType":"553","messageId":"554","endLine":17,"endColumn":24},{"ruleId":"545","severity":1,"message":"587","line":6,"column":12,"nodeType":"547","messageId":"548","endLine":6,"endColumn":19},{"ruleId":"545","severity":1,"message":"588","line":6,"column":21,"nodeType":"547","messageId":"548","endLine":6,"endColumn":31},{"ruleId":"589","severity":1,"message":"590","line":38,"column":25,"nodeType":"591","endLine":38,"endColumn":63},{"ruleId":"592","severity":1,"message":"593","line":86,"column":118,"nodeType":"594","endLine":86,"endColumn":137},{"ruleId":"545","severity":1,"message":"595","line":2,"column":5,"nodeType":"547","messageId":"548","endLine":2,"endColumn":25},{"ruleId":"545","severity":1,"message":"596","line":3,"column":5,"nodeType":"547","messageId":"548","endLine":3,"endColumn":25},{"ruleId":"545","severity":1,"message":"597","line":4,"column":5,"nodeType":"547","messageId":"548","endLine":4,"endColumn":22},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"545","severity":1,"message":"598","line":2,"column":27,"nodeType":"547","messageId":"548","endLine":2,"endColumn":39},{"ruleId":"545","severity":1,"message":"599","line":2,"column":52,"nodeType":"547","messageId":"548","endLine":2,"endColumn":59},{"ruleId":"557","severity":1,"message":"600","line":17,"column":16,"nodeType":"601","endLine":28,"endColumn":6},{"ruleId":"551","severity":1,"message":"552","line":39,"column":24,"nodeType":"553","messageId":"554","endLine":39,"endColumn":26},{"ruleId":"551","severity":1,"message":"552","line":39,"column":45,"nodeType":"553","messageId":"554","endLine":39,"endColumn":47},{"ruleId":"551","severity":1,"message":"552","line":43,"column":30,"nodeType":"553","messageId":"554","endLine":43,"endColumn":32},{"ruleId":"545","severity":1,"message":"573","line":6,"column":27,"nodeType":"547","messageId":"548","endLine":6,"endColumn":39},{"ruleId":"545","severity":1,"message":"574","line":6,"column":41,"nodeType":"547","messageId":"548","endLine":6,"endColumn":61},{"ruleId":"545","severity":1,"message":"575","line":6,"column":63,"nodeType":"547","messageId":"548","endLine":6,"endColumn":74},{"ruleId":"545","severity":1,"message":"602","line":13,"column":11,"nodeType":"547","messageId":"548","endLine":13,"endColumn":15},{"ruleId":"545","severity":1,"message":"603","line":13,"column":17,"nodeType":"547","messageId":"548","endLine":13,"endColumn":24},{"ruleId":"557","severity":1,"message":"600","line":16,"column":16,"nodeType":"601","endLine":28,"endColumn":6},{"ruleId":"551","severity":1,"message":"552","line":42,"column":53,"nodeType":"553","messageId":"554","endLine":42,"endColumn":55},{"ruleId":"551","severity":1,"message":"552","line":63,"column":57,"nodeType":"553","messageId":"554","endLine":63,"endColumn":59},{"ruleId":"545","severity":1,"message":"604","line":14,"column":12,"nodeType":"547","messageId":"548","endLine":14,"endColumn":19},{"ruleId":"557","severity":1,"message":"600","line":26,"column":15,"nodeType":"601","endLine":39,"endColumn":6},{"ruleId":"545","severity":1,"message":"549","line":1,"column":19,"nodeType":"547","messageId":"548","endLine":1,"endColumn":27},{"ruleId":"545","severity":1,"message":"605","line":6,"column":10,"nodeType":"547","messageId":"548","endLine":6,"endColumn":20},{"ruleId":"545","severity":1,"message":"606","line":7,"column":21,"nodeType":"547","messageId":"548","endLine":7,"endColumn":31},{"ruleId":"545","severity":1,"message":"607","line":18,"column":13,"nodeType":"547","messageId":"548","endLine":18,"endColumn":20},{"ruleId":"545","severity":1,"message":"608","line":18,"column":22,"nodeType":"547","messageId":"548","endLine":18,"endColumn":27},{"ruleId":"545","severity":1,"message":"609","line":18,"column":29,"nodeType":"547","messageId":"548","endLine":18,"endColumn":34},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"545","severity":1,"message":"550","line":1,"column":27,"nodeType":"547","messageId":"548","endLine":1,"endColumn":36},{"ruleId":"545","severity":1,"message":"610","line":7,"column":10,"nodeType":"547","messageId":"548","endLine":7,"endColumn":19},{"ruleId":"545","severity":1,"message":"611","line":17,"column":13,"nodeType":"547","messageId":"548","endLine":17,"endColumn":21},{"ruleId":"545","severity":1,"message":"612","line":20,"column":22,"nodeType":"547","messageId":"548","endLine":20,"endColumn":35},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},"no-native-reassign",["613"],"no-negated-in-lhs",["614"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["615"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["616"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["617"],"'data' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.",["613"],["614"],"'ProductCarousel' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.",["618"],["619"],["620"],"'LinkContainer' is defined but never used.","'Redirect' is defined but never used.","'ListGroup' is defined but never used.","'Image' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Product' is defined but never used.","'Card' is defined but never used.","'contact' is assigned a value but never used.","'setContact' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'CONTACT_LIST_REQUEST' is defined but never used.","'CONTACT_LIST_SUCCESS' is defined but never used.","'CONTACT_LIST_FAIL' is defined but never used.","'initialState' is defined but never used.","'context' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'come' is assigned a value but never used.","'setCome' is assigned a value but never used.","'element' is assigned a value but never used.","'useHistory' is defined but never used.","'deleteUser' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'users' is assigned a value but never used.","'listUsers' is defined but never used.","'userInfo' is assigned a value but never used.","'successDelete' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"621","fix":"622"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},{"desc":"623","fix":"627"},{"desc":"621","fix":"628"},{"desc":"625","fix":"629"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"630","text":"631"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"632","text":"633"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"634","text":"635"},{"range":"636","text":"633"},{"range":"637","text":"631"},{"range":"638","text":"635"},[1268,1286],"[success, history, order._id, dispatch]",[2272,2326],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1432,1470],"[user, userId, successUpdate, history, dispatch]",[2272,2326],[1268,1286],[1432,1470]]